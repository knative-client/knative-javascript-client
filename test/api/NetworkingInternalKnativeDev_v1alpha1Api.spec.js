/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.NetworkingInternalKnativeDev_v1alpha1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetworkingInternalKnativeDev_v1alpha1Api', function() {
    describe('createClusterIngress', function() {
      it('should call createClusterIngress successfully', function(done) {
        //uncomment below and update the code to test createClusterIngress
        //instance.createClusterIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterIngress', function() {
      it('should call deleteClusterIngress successfully', function(done) {
        //uncomment below and update the code to test deleteClusterIngress
        //instance.deleteClusterIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionClusterIngress', function() {
      it('should call deleteCollectionClusterIngress successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionClusterIngress
        //instance.deleteCollectionClusterIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterIngress', function() {
      it('should call listClusterIngress successfully', function(done) {
        //uncomment below and update the code to test listClusterIngress
        //instance.listClusterIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchClusterIngress', function() {
      it('should call patchClusterIngress successfully', function(done) {
        //uncomment below and update the code to test patchClusterIngress
        //instance.patchClusterIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchClusterIngressStatus', function() {
      it('should call patchClusterIngressStatus successfully', function(done) {
        //uncomment below and update the code to test patchClusterIngressStatus
        //instance.patchClusterIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readClusterIngress', function() {
      it('should call readClusterIngress successfully', function(done) {
        //uncomment below and update the code to test readClusterIngress
        //instance.readClusterIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readClusterIngressStatus', function() {
      it('should call readClusterIngressStatus successfully', function(done) {
        //uncomment below and update the code to test readClusterIngressStatus
        //instance.readClusterIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceClusterIngress', function() {
      it('should call replaceClusterIngress successfully', function(done) {
        //uncomment below and update the code to test replaceClusterIngress
        //instance.replaceClusterIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceClusterIngressStatus', function() {
      it('should call replaceClusterIngressStatus successfully', function(done) {
        //uncomment below and update the code to test replaceClusterIngressStatus
        //instance.replaceClusterIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
