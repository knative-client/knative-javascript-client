/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.CachingInternalKnativeDev_v1alpha1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CachingInternalKnativeDev_v1alpha1Api', function() {
    describe('createNamespacedImage', function() {
      it('should call createNamespacedImage successfully', function(done) {
        //uncomment below and update the code to test createNamespacedImage
        //instance.createNamespacedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedImage', function() {
      it('should call deleteCollectionNamespacedImage successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedImage
        //instance.deleteCollectionNamespacedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedImage', function() {
      it('should call deleteNamespacedImage successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedImage
        //instance.deleteNamespacedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listImageForAllNamespaces', function() {
      it('should call listImageForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listImageForAllNamespaces
        //instance.listImageForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedImage', function() {
      it('should call listNamespacedImage successfully', function(done) {
        //uncomment below and update the code to test listNamespacedImage
        //instance.listNamespacedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedImage', function() {
      it('should call patchNamespacedImage successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedImage
        //instance.patchNamespacedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedImageStatus', function() {
      it('should call patchNamespacedImageStatus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedImageStatus
        //instance.patchNamespacedImageStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedImage', function() {
      it('should call readNamespacedImage successfully', function(done) {
        //uncomment below and update the code to test readNamespacedImage
        //instance.readNamespacedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedImageStatus', function() {
      it('should call readNamespacedImageStatus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedImageStatus
        //instance.readNamespacedImageStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedImage', function() {
      it('should call replaceNamespacedImage successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedImage
        //instance.replaceNamespacedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedImageStatus', function() {
      it('should call replaceNamespacedImageStatus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedImageStatus
        //instance.replaceNamespacedImageStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
