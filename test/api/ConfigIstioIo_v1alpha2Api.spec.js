/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.ConfigIstioIo_v1alpha2Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConfigIstioIo_v1alpha2Api', function() {
    describe('createNamespacedHTTPAPISpec', function() {
      it('should call createNamespacedHTTPAPISpec successfully', function(done) {
        //uncomment below and update the code to test createNamespacedHTTPAPISpec
        //instance.createNamespacedHTTPAPISpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedHTTPAPISpecBinding', function() {
      it('should call createNamespacedHTTPAPISpecBinding successfully', function(done) {
        //uncomment below and update the code to test createNamespacedHTTPAPISpecBinding
        //instance.createNamespacedHTTPAPISpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedQuotaSpec', function() {
      it('should call createNamespacedQuotaSpec successfully', function(done) {
        //uncomment below and update the code to test createNamespacedQuotaSpec
        //instance.createNamespacedQuotaSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedQuotaSpecBinding', function() {
      it('should call createNamespacedQuotaSpecBinding successfully', function(done) {
        //uncomment below and update the code to test createNamespacedQuotaSpecBinding
        //instance.createNamespacedQuotaSpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedadapter', function() {
      it('should call createNamespacedadapter successfully', function(done) {
        //uncomment below and update the code to test createNamespacedadapter
        //instance.createNamespacedadapter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedapikey', function() {
      it('should call createNamespacedapikey successfully', function(done) {
        //uncomment below and update the code to test createNamespacedapikey
        //instance.createNamespacedapikey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedattributemanifest', function() {
      it('should call createNamespacedattributemanifest successfully', function(done) {
        //uncomment below and update the code to test createNamespacedattributemanifest
        //instance.createNamespacedattributemanifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedauthorization', function() {
      it('should call createNamespacedauthorization successfully', function(done) {
        //uncomment below and update the code to test createNamespacedauthorization
        //instance.createNamespacedauthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedbypass', function() {
      it('should call createNamespacedbypass successfully', function(done) {
        //uncomment below and update the code to test createNamespacedbypass
        //instance.createNamespacedbypass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedchecknothing', function() {
      it('should call createNamespacedchecknothing successfully', function(done) {
        //uncomment below and update the code to test createNamespacedchecknothing
        //instance.createNamespacedchecknothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedcirconus', function() {
      it('should call createNamespacedcirconus successfully', function(done) {
        //uncomment below and update the code to test createNamespacedcirconus
        //instance.createNamespacedcirconus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespaceddenier', function() {
      it('should call createNamespaceddenier successfully', function(done) {
        //uncomment below and update the code to test createNamespaceddenier
        //instance.createNamespaceddenier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacededge', function() {
      it('should call createNamespacededge successfully', function(done) {
        //uncomment below and update the code to test createNamespacededge
        //instance.createNamespacededge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedfluentd', function() {
      it('should call createNamespacedfluentd successfully', function(done) {
        //uncomment below and update the code to test createNamespacedfluentd
        //instance.createNamespacedfluentd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedhandler', function() {
      it('should call createNamespacedhandler successfully', function(done) {
        //uncomment below and update the code to test createNamespacedhandler
        //instance.createNamespacedhandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedinstance', function() {
      it('should call createNamespacedinstance successfully', function(done) {
        //uncomment below and update the code to test createNamespacedinstance
        //instance.createNamespacedinstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedkubernetes', function() {
      it('should call createNamespacedkubernetes successfully', function(done) {
        //uncomment below and update the code to test createNamespacedkubernetes
        //instance.createNamespacedkubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedkubernetesenv', function() {
      it('should call createNamespacedkubernetesenv successfully', function(done) {
        //uncomment below and update the code to test createNamespacedkubernetesenv
        //instance.createNamespacedkubernetesenv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedlistchecker', function() {
      it('should call createNamespacedlistchecker successfully', function(done) {
        //uncomment below and update the code to test createNamespacedlistchecker
        //instance.createNamespacedlistchecker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedlistentry', function() {
      it('should call createNamespacedlistentry successfully', function(done) {
        //uncomment below and update the code to test createNamespacedlistentry
        //instance.createNamespacedlistentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedlogentry', function() {
      it('should call createNamespacedlogentry successfully', function(done) {
        //uncomment below and update the code to test createNamespacedlogentry
        //instance.createNamespacedlogentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedmemquota', function() {
      it('should call createNamespacedmemquota successfully', function(done) {
        //uncomment below and update the code to test createNamespacedmemquota
        //instance.createNamespacedmemquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedmetric', function() {
      it('should call createNamespacedmetric successfully', function(done) {
        //uncomment below and update the code to test createNamespacedmetric
        //instance.createNamespacedmetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacednoop', function() {
      it('should call createNamespacednoop successfully', function(done) {
        //uncomment below and update the code to test createNamespacednoop
        //instance.createNamespacednoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedopa', function() {
      it('should call createNamespacedopa successfully', function(done) {
        //uncomment below and update the code to test createNamespacedopa
        //instance.createNamespacedopa(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedprometheus', function() {
      it('should call createNamespacedprometheus successfully', function(done) {
        //uncomment below and update the code to test createNamespacedprometheus
        //instance.createNamespacedprometheus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedquota', function() {
      it('should call createNamespacedquota successfully', function(done) {
        //uncomment below and update the code to test createNamespacedquota
        //instance.createNamespacedquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedrbac', function() {
      it('should call createNamespacedrbac successfully', function(done) {
        //uncomment below and update the code to test createNamespacedrbac
        //instance.createNamespacedrbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedredisquota', function() {
      it('should call createNamespacedredisquota successfully', function(done) {
        //uncomment below and update the code to test createNamespacedredisquota
        //instance.createNamespacedredisquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedreportnothing', function() {
      it('should call createNamespacedreportnothing successfully', function(done) {
        //uncomment below and update the code to test createNamespacedreportnothing
        //instance.createNamespacedreportnothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedrule', function() {
      it('should call createNamespacedrule successfully', function(done) {
        //uncomment below and update the code to test createNamespacedrule
        //instance.createNamespacedrule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedservicecontrol', function() {
      it('should call createNamespacedservicecontrol successfully', function(done) {
        //uncomment below and update the code to test createNamespacedservicecontrol
        //instance.createNamespacedservicecontrol(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedservicecontrolreport', function() {
      it('should call createNamespacedservicecontrolreport successfully', function(done) {
        //uncomment below and update the code to test createNamespacedservicecontrolreport
        //instance.createNamespacedservicecontrolreport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedsignalfx', function() {
      it('should call createNamespacedsignalfx successfully', function(done) {
        //uncomment below and update the code to test createNamespacedsignalfx
        //instance.createNamespacedsignalfx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedsolarwinds', function() {
      it('should call createNamespacedsolarwinds successfully', function(done) {
        //uncomment below and update the code to test createNamespacedsolarwinds
        //instance.createNamespacedsolarwinds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedstackdriver', function() {
      it('should call createNamespacedstackdriver successfully', function(done) {
        //uncomment below and update the code to test createNamespacedstackdriver
        //instance.createNamespacedstackdriver(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedstatsd', function() {
      it('should call createNamespacedstatsd successfully', function(done) {
        //uncomment below and update the code to test createNamespacedstatsd
        //instance.createNamespacedstatsd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedstdio', function() {
      it('should call createNamespacedstdio successfully', function(done) {
        //uncomment below and update the code to test createNamespacedstdio
        //instance.createNamespacedstdio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedtemplate', function() {
      it('should call createNamespacedtemplate successfully', function(done) {
        //uncomment below and update the code to test createNamespacedtemplate
        //instance.createNamespacedtemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedtracespan', function() {
      it('should call createNamespacedtracespan successfully', function(done) {
        //uncomment below and update the code to test createNamespacedtracespan
        //instance.createNamespacedtracespan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedHTTPAPISpec', function() {
      it('should call deleteCollectionNamespacedHTTPAPISpec successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedHTTPAPISpec
        //instance.deleteCollectionNamespacedHTTPAPISpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedHTTPAPISpecBinding', function() {
      it('should call deleteCollectionNamespacedHTTPAPISpecBinding successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedHTTPAPISpecBinding
        //instance.deleteCollectionNamespacedHTTPAPISpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedQuotaSpec', function() {
      it('should call deleteCollectionNamespacedQuotaSpec successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedQuotaSpec
        //instance.deleteCollectionNamespacedQuotaSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedQuotaSpecBinding', function() {
      it('should call deleteCollectionNamespacedQuotaSpecBinding successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedQuotaSpecBinding
        //instance.deleteCollectionNamespacedQuotaSpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedadapter', function() {
      it('should call deleteCollectionNamespacedadapter successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedadapter
        //instance.deleteCollectionNamespacedadapter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedapikey', function() {
      it('should call deleteCollectionNamespacedapikey successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedapikey
        //instance.deleteCollectionNamespacedapikey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedattributemanifest', function() {
      it('should call deleteCollectionNamespacedattributemanifest successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedattributemanifest
        //instance.deleteCollectionNamespacedattributemanifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedauthorization', function() {
      it('should call deleteCollectionNamespacedauthorization successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedauthorization
        //instance.deleteCollectionNamespacedauthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedbypass', function() {
      it('should call deleteCollectionNamespacedbypass successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedbypass
        //instance.deleteCollectionNamespacedbypass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedchecknothing', function() {
      it('should call deleteCollectionNamespacedchecknothing successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedchecknothing
        //instance.deleteCollectionNamespacedchecknothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedcirconus', function() {
      it('should call deleteCollectionNamespacedcirconus successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedcirconus
        //instance.deleteCollectionNamespacedcirconus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespaceddenier', function() {
      it('should call deleteCollectionNamespaceddenier successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespaceddenier
        //instance.deleteCollectionNamespaceddenier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacededge', function() {
      it('should call deleteCollectionNamespacededge successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacededge
        //instance.deleteCollectionNamespacededge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedfluentd', function() {
      it('should call deleteCollectionNamespacedfluentd successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedfluentd
        //instance.deleteCollectionNamespacedfluentd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedhandler', function() {
      it('should call deleteCollectionNamespacedhandler successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedhandler
        //instance.deleteCollectionNamespacedhandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedinstance', function() {
      it('should call deleteCollectionNamespacedinstance successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedinstance
        //instance.deleteCollectionNamespacedinstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedkubernetes', function() {
      it('should call deleteCollectionNamespacedkubernetes successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedkubernetes
        //instance.deleteCollectionNamespacedkubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedkubernetesenv', function() {
      it('should call deleteCollectionNamespacedkubernetesenv successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedkubernetesenv
        //instance.deleteCollectionNamespacedkubernetesenv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedlistchecker', function() {
      it('should call deleteCollectionNamespacedlistchecker successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedlistchecker
        //instance.deleteCollectionNamespacedlistchecker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedlistentry', function() {
      it('should call deleteCollectionNamespacedlistentry successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedlistentry
        //instance.deleteCollectionNamespacedlistentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedlogentry', function() {
      it('should call deleteCollectionNamespacedlogentry successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedlogentry
        //instance.deleteCollectionNamespacedlogentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedmemquota', function() {
      it('should call deleteCollectionNamespacedmemquota successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedmemquota
        //instance.deleteCollectionNamespacedmemquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedmetric', function() {
      it('should call deleteCollectionNamespacedmetric successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedmetric
        //instance.deleteCollectionNamespacedmetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacednoop', function() {
      it('should call deleteCollectionNamespacednoop successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacednoop
        //instance.deleteCollectionNamespacednoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedopa', function() {
      it('should call deleteCollectionNamespacedopa successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedopa
        //instance.deleteCollectionNamespacedopa(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedprometheus', function() {
      it('should call deleteCollectionNamespacedprometheus successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedprometheus
        //instance.deleteCollectionNamespacedprometheus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedquota', function() {
      it('should call deleteCollectionNamespacedquota successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedquota
        //instance.deleteCollectionNamespacedquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedrbac', function() {
      it('should call deleteCollectionNamespacedrbac successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedrbac
        //instance.deleteCollectionNamespacedrbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedredisquota', function() {
      it('should call deleteCollectionNamespacedredisquota successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedredisquota
        //instance.deleteCollectionNamespacedredisquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedreportnothing', function() {
      it('should call deleteCollectionNamespacedreportnothing successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedreportnothing
        //instance.deleteCollectionNamespacedreportnothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedrule', function() {
      it('should call deleteCollectionNamespacedrule successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedrule
        //instance.deleteCollectionNamespacedrule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedservicecontrol', function() {
      it('should call deleteCollectionNamespacedservicecontrol successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedservicecontrol
        //instance.deleteCollectionNamespacedservicecontrol(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedservicecontrolreport', function() {
      it('should call deleteCollectionNamespacedservicecontrolreport successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedservicecontrolreport
        //instance.deleteCollectionNamespacedservicecontrolreport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedsignalfx', function() {
      it('should call deleteCollectionNamespacedsignalfx successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedsignalfx
        //instance.deleteCollectionNamespacedsignalfx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedsolarwinds', function() {
      it('should call deleteCollectionNamespacedsolarwinds successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedsolarwinds
        //instance.deleteCollectionNamespacedsolarwinds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedstackdriver', function() {
      it('should call deleteCollectionNamespacedstackdriver successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedstackdriver
        //instance.deleteCollectionNamespacedstackdriver(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedstatsd', function() {
      it('should call deleteCollectionNamespacedstatsd successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedstatsd
        //instance.deleteCollectionNamespacedstatsd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedstdio', function() {
      it('should call deleteCollectionNamespacedstdio successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedstdio
        //instance.deleteCollectionNamespacedstdio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedtemplate', function() {
      it('should call deleteCollectionNamespacedtemplate successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedtemplate
        //instance.deleteCollectionNamespacedtemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedtracespan', function() {
      it('should call deleteCollectionNamespacedtracespan successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedtracespan
        //instance.deleteCollectionNamespacedtracespan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedHTTPAPISpec', function() {
      it('should call deleteNamespacedHTTPAPISpec successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedHTTPAPISpec
        //instance.deleteNamespacedHTTPAPISpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedHTTPAPISpecBinding', function() {
      it('should call deleteNamespacedHTTPAPISpecBinding successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedHTTPAPISpecBinding
        //instance.deleteNamespacedHTTPAPISpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedQuotaSpec', function() {
      it('should call deleteNamespacedQuotaSpec successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedQuotaSpec
        //instance.deleteNamespacedQuotaSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedQuotaSpecBinding', function() {
      it('should call deleteNamespacedQuotaSpecBinding successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedQuotaSpecBinding
        //instance.deleteNamespacedQuotaSpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedadapter', function() {
      it('should call deleteNamespacedadapter successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedadapter
        //instance.deleteNamespacedadapter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedapikey', function() {
      it('should call deleteNamespacedapikey successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedapikey
        //instance.deleteNamespacedapikey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedattributemanifest', function() {
      it('should call deleteNamespacedattributemanifest successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedattributemanifest
        //instance.deleteNamespacedattributemanifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedauthorization', function() {
      it('should call deleteNamespacedauthorization successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedauthorization
        //instance.deleteNamespacedauthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedbypass', function() {
      it('should call deleteNamespacedbypass successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedbypass
        //instance.deleteNamespacedbypass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedchecknothing', function() {
      it('should call deleteNamespacedchecknothing successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedchecknothing
        //instance.deleteNamespacedchecknothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedcirconus', function() {
      it('should call deleteNamespacedcirconus successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedcirconus
        //instance.deleteNamespacedcirconus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespaceddenier', function() {
      it('should call deleteNamespaceddenier successfully', function(done) {
        //uncomment below and update the code to test deleteNamespaceddenier
        //instance.deleteNamespaceddenier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacededge', function() {
      it('should call deleteNamespacededge successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacededge
        //instance.deleteNamespacededge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedfluentd', function() {
      it('should call deleteNamespacedfluentd successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedfluentd
        //instance.deleteNamespacedfluentd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedhandler', function() {
      it('should call deleteNamespacedhandler successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedhandler
        //instance.deleteNamespacedhandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedinstance', function() {
      it('should call deleteNamespacedinstance successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedinstance
        //instance.deleteNamespacedinstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedkubernetes', function() {
      it('should call deleteNamespacedkubernetes successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedkubernetes
        //instance.deleteNamespacedkubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedkubernetesenv', function() {
      it('should call deleteNamespacedkubernetesenv successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedkubernetesenv
        //instance.deleteNamespacedkubernetesenv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedlistchecker', function() {
      it('should call deleteNamespacedlistchecker successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedlistchecker
        //instance.deleteNamespacedlistchecker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedlistentry', function() {
      it('should call deleteNamespacedlistentry successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedlistentry
        //instance.deleteNamespacedlistentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedlogentry', function() {
      it('should call deleteNamespacedlogentry successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedlogentry
        //instance.deleteNamespacedlogentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedmemquota', function() {
      it('should call deleteNamespacedmemquota successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedmemquota
        //instance.deleteNamespacedmemquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedmetric', function() {
      it('should call deleteNamespacedmetric successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedmetric
        //instance.deleteNamespacedmetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacednoop', function() {
      it('should call deleteNamespacednoop successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacednoop
        //instance.deleteNamespacednoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedopa', function() {
      it('should call deleteNamespacedopa successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedopa
        //instance.deleteNamespacedopa(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedprometheus', function() {
      it('should call deleteNamespacedprometheus successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedprometheus
        //instance.deleteNamespacedprometheus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedquota', function() {
      it('should call deleteNamespacedquota successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedquota
        //instance.deleteNamespacedquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedrbac', function() {
      it('should call deleteNamespacedrbac successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedrbac
        //instance.deleteNamespacedrbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedredisquota', function() {
      it('should call deleteNamespacedredisquota successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedredisquota
        //instance.deleteNamespacedredisquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedreportnothing', function() {
      it('should call deleteNamespacedreportnothing successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedreportnothing
        //instance.deleteNamespacedreportnothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedrule', function() {
      it('should call deleteNamespacedrule successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedrule
        //instance.deleteNamespacedrule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedservicecontrol', function() {
      it('should call deleteNamespacedservicecontrol successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedservicecontrol
        //instance.deleteNamespacedservicecontrol(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedservicecontrolreport', function() {
      it('should call deleteNamespacedservicecontrolreport successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedservicecontrolreport
        //instance.deleteNamespacedservicecontrolreport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedsignalfx', function() {
      it('should call deleteNamespacedsignalfx successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedsignalfx
        //instance.deleteNamespacedsignalfx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedsolarwinds', function() {
      it('should call deleteNamespacedsolarwinds successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedsolarwinds
        //instance.deleteNamespacedsolarwinds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedstackdriver', function() {
      it('should call deleteNamespacedstackdriver successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedstackdriver
        //instance.deleteNamespacedstackdriver(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedstatsd', function() {
      it('should call deleteNamespacedstatsd successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedstatsd
        //instance.deleteNamespacedstatsd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedstdio', function() {
      it('should call deleteNamespacedstdio successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedstdio
        //instance.deleteNamespacedstdio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedtemplate', function() {
      it('should call deleteNamespacedtemplate successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedtemplate
        //instance.deleteNamespacedtemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedtracespan', function() {
      it('should call deleteNamespacedtracespan successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedtracespan
        //instance.deleteNamespacedtracespan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAdapterForAllNamespaces', function() {
      it('should call listAdapterForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAdapterForAllNamespaces
        //instance.listAdapterForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listApikeyForAllNamespaces', function() {
      it('should call listApikeyForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listApikeyForAllNamespaces
        //instance.listApikeyForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAttributemanifestForAllNamespaces', function() {
      it('should call listAttributemanifestForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAttributemanifestForAllNamespaces
        //instance.listAttributemanifestForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationForAllNamespaces', function() {
      it('should call listAuthorizationForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationForAllNamespaces
        //instance.listAuthorizationForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBypassForAllNamespaces', function() {
      it('should call listBypassForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listBypassForAllNamespaces
        //instance.listBypassForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listChecknothingForAllNamespaces', function() {
      it('should call listChecknothingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listChecknothingForAllNamespaces
        //instance.listChecknothingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCirconusForAllNamespaces', function() {
      it('should call listCirconusForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listCirconusForAllNamespaces
        //instance.listCirconusForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDenierForAllNamespaces', function() {
      it('should call listDenierForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listDenierForAllNamespaces
        //instance.listDenierForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEdgeForAllNamespaces', function() {
      it('should call listEdgeForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listEdgeForAllNamespaces
        //instance.listEdgeForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFluentdForAllNamespaces', function() {
      it('should call listFluentdForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listFluentdForAllNamespaces
        //instance.listFluentdForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHTTPAPISpecBindingForAllNamespaces', function() {
      it('should call listHTTPAPISpecBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listHTTPAPISpecBindingForAllNamespaces
        //instance.listHTTPAPISpecBindingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHTTPAPISpecForAllNamespaces', function() {
      it('should call listHTTPAPISpecForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listHTTPAPISpecForAllNamespaces
        //instance.listHTTPAPISpecForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHandlerForAllNamespaces', function() {
      it('should call listHandlerForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listHandlerForAllNamespaces
        //instance.listHandlerForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInstanceForAllNamespaces', function() {
      it('should call listInstanceForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listInstanceForAllNamespaces
        //instance.listInstanceForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listKubernetesForAllNamespaces', function() {
      it('should call listKubernetesForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listKubernetesForAllNamespaces
        //instance.listKubernetesForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listKubernetesenvForAllNamespaces', function() {
      it('should call listKubernetesenvForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listKubernetesenvForAllNamespaces
        //instance.listKubernetesenvForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listListcheckerForAllNamespaces', function() {
      it('should call listListcheckerForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listListcheckerForAllNamespaces
        //instance.listListcheckerForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listListentryForAllNamespaces', function() {
      it('should call listListentryForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listListentryForAllNamespaces
        //instance.listListentryForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLogentryForAllNamespaces', function() {
      it('should call listLogentryForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listLogentryForAllNamespaces
        //instance.listLogentryForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMemquotaForAllNamespaces', function() {
      it('should call listMemquotaForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listMemquotaForAllNamespaces
        //instance.listMemquotaForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMetricForAllNamespaces', function() {
      it('should call listMetricForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listMetricForAllNamespaces
        //instance.listMetricForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedHTTPAPISpec', function() {
      it('should call listNamespacedHTTPAPISpec successfully', function(done) {
        //uncomment below and update the code to test listNamespacedHTTPAPISpec
        //instance.listNamespacedHTTPAPISpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedHTTPAPISpecBinding', function() {
      it('should call listNamespacedHTTPAPISpecBinding successfully', function(done) {
        //uncomment below and update the code to test listNamespacedHTTPAPISpecBinding
        //instance.listNamespacedHTTPAPISpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedQuotaSpec', function() {
      it('should call listNamespacedQuotaSpec successfully', function(done) {
        //uncomment below and update the code to test listNamespacedQuotaSpec
        //instance.listNamespacedQuotaSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedQuotaSpecBinding', function() {
      it('should call listNamespacedQuotaSpecBinding successfully', function(done) {
        //uncomment below and update the code to test listNamespacedQuotaSpecBinding
        //instance.listNamespacedQuotaSpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedadapter', function() {
      it('should call listNamespacedadapter successfully', function(done) {
        //uncomment below and update the code to test listNamespacedadapter
        //instance.listNamespacedadapter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedapikey', function() {
      it('should call listNamespacedapikey successfully', function(done) {
        //uncomment below and update the code to test listNamespacedapikey
        //instance.listNamespacedapikey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedattributemanifest', function() {
      it('should call listNamespacedattributemanifest successfully', function(done) {
        //uncomment below and update the code to test listNamespacedattributemanifest
        //instance.listNamespacedattributemanifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedauthorization', function() {
      it('should call listNamespacedauthorization successfully', function(done) {
        //uncomment below and update the code to test listNamespacedauthorization
        //instance.listNamespacedauthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedbypass', function() {
      it('should call listNamespacedbypass successfully', function(done) {
        //uncomment below and update the code to test listNamespacedbypass
        //instance.listNamespacedbypass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedchecknothing', function() {
      it('should call listNamespacedchecknothing successfully', function(done) {
        //uncomment below and update the code to test listNamespacedchecknothing
        //instance.listNamespacedchecknothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedcirconus', function() {
      it('should call listNamespacedcirconus successfully', function(done) {
        //uncomment below and update the code to test listNamespacedcirconus
        //instance.listNamespacedcirconus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespaceddenier', function() {
      it('should call listNamespaceddenier successfully', function(done) {
        //uncomment below and update the code to test listNamespaceddenier
        //instance.listNamespaceddenier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacededge', function() {
      it('should call listNamespacededge successfully', function(done) {
        //uncomment below and update the code to test listNamespacededge
        //instance.listNamespacededge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedfluentd', function() {
      it('should call listNamespacedfluentd successfully', function(done) {
        //uncomment below and update the code to test listNamespacedfluentd
        //instance.listNamespacedfluentd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedhandler', function() {
      it('should call listNamespacedhandler successfully', function(done) {
        //uncomment below and update the code to test listNamespacedhandler
        //instance.listNamespacedhandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedinstance', function() {
      it('should call listNamespacedinstance successfully', function(done) {
        //uncomment below and update the code to test listNamespacedinstance
        //instance.listNamespacedinstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedkubernetes', function() {
      it('should call listNamespacedkubernetes successfully', function(done) {
        //uncomment below and update the code to test listNamespacedkubernetes
        //instance.listNamespacedkubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedkubernetesenv', function() {
      it('should call listNamespacedkubernetesenv successfully', function(done) {
        //uncomment below and update the code to test listNamespacedkubernetesenv
        //instance.listNamespacedkubernetesenv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedlistchecker', function() {
      it('should call listNamespacedlistchecker successfully', function(done) {
        //uncomment below and update the code to test listNamespacedlistchecker
        //instance.listNamespacedlistchecker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedlistentry', function() {
      it('should call listNamespacedlistentry successfully', function(done) {
        //uncomment below and update the code to test listNamespacedlistentry
        //instance.listNamespacedlistentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedlogentry', function() {
      it('should call listNamespacedlogentry successfully', function(done) {
        //uncomment below and update the code to test listNamespacedlogentry
        //instance.listNamespacedlogentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedmemquota', function() {
      it('should call listNamespacedmemquota successfully', function(done) {
        //uncomment below and update the code to test listNamespacedmemquota
        //instance.listNamespacedmemquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedmetric', function() {
      it('should call listNamespacedmetric successfully', function(done) {
        //uncomment below and update the code to test listNamespacedmetric
        //instance.listNamespacedmetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacednoop', function() {
      it('should call listNamespacednoop successfully', function(done) {
        //uncomment below and update the code to test listNamespacednoop
        //instance.listNamespacednoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedopa', function() {
      it('should call listNamespacedopa successfully', function(done) {
        //uncomment below and update the code to test listNamespacedopa
        //instance.listNamespacedopa(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedprometheus', function() {
      it('should call listNamespacedprometheus successfully', function(done) {
        //uncomment below and update the code to test listNamespacedprometheus
        //instance.listNamespacedprometheus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedquota', function() {
      it('should call listNamespacedquota successfully', function(done) {
        //uncomment below and update the code to test listNamespacedquota
        //instance.listNamespacedquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedrbac', function() {
      it('should call listNamespacedrbac successfully', function(done) {
        //uncomment below and update the code to test listNamespacedrbac
        //instance.listNamespacedrbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedredisquota', function() {
      it('should call listNamespacedredisquota successfully', function(done) {
        //uncomment below and update the code to test listNamespacedredisquota
        //instance.listNamespacedredisquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedreportnothing', function() {
      it('should call listNamespacedreportnothing successfully', function(done) {
        //uncomment below and update the code to test listNamespacedreportnothing
        //instance.listNamespacedreportnothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedrule', function() {
      it('should call listNamespacedrule successfully', function(done) {
        //uncomment below and update the code to test listNamespacedrule
        //instance.listNamespacedrule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedservicecontrol', function() {
      it('should call listNamespacedservicecontrol successfully', function(done) {
        //uncomment below and update the code to test listNamespacedservicecontrol
        //instance.listNamespacedservicecontrol(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedservicecontrolreport', function() {
      it('should call listNamespacedservicecontrolreport successfully', function(done) {
        //uncomment below and update the code to test listNamespacedservicecontrolreport
        //instance.listNamespacedservicecontrolreport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedsignalfx', function() {
      it('should call listNamespacedsignalfx successfully', function(done) {
        //uncomment below and update the code to test listNamespacedsignalfx
        //instance.listNamespacedsignalfx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedsolarwinds', function() {
      it('should call listNamespacedsolarwinds successfully', function(done) {
        //uncomment below and update the code to test listNamespacedsolarwinds
        //instance.listNamespacedsolarwinds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedstackdriver', function() {
      it('should call listNamespacedstackdriver successfully', function(done) {
        //uncomment below and update the code to test listNamespacedstackdriver
        //instance.listNamespacedstackdriver(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedstatsd', function() {
      it('should call listNamespacedstatsd successfully', function(done) {
        //uncomment below and update the code to test listNamespacedstatsd
        //instance.listNamespacedstatsd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedstdio', function() {
      it('should call listNamespacedstdio successfully', function(done) {
        //uncomment below and update the code to test listNamespacedstdio
        //instance.listNamespacedstdio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedtemplate', function() {
      it('should call listNamespacedtemplate successfully', function(done) {
        //uncomment below and update the code to test listNamespacedtemplate
        //instance.listNamespacedtemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedtracespan', function() {
      it('should call listNamespacedtracespan successfully', function(done) {
        //uncomment below and update the code to test listNamespacedtracespan
        //instance.listNamespacedtracespan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNoopForAllNamespaces', function() {
      it('should call listNoopForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listNoopForAllNamespaces
        //instance.listNoopForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOpaForAllNamespaces', function() {
      it('should call listOpaForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listOpaForAllNamespaces
        //instance.listOpaForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPrometheusForAllNamespaces', function() {
      it('should call listPrometheusForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listPrometheusForAllNamespaces
        //instance.listPrometheusForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQuotaForAllNamespaces', function() {
      it('should call listQuotaForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listQuotaForAllNamespaces
        //instance.listQuotaForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQuotaSpecBindingForAllNamespaces', function() {
      it('should call listQuotaSpecBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listQuotaSpecBindingForAllNamespaces
        //instance.listQuotaSpecBindingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQuotaSpecForAllNamespaces', function() {
      it('should call listQuotaSpecForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listQuotaSpecForAllNamespaces
        //instance.listQuotaSpecForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacForAllNamespaces', function() {
      it('should call listRbacForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRbacForAllNamespaces
        //instance.listRbacForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRedisquotaForAllNamespaces', function() {
      it('should call listRedisquotaForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRedisquotaForAllNamespaces
        //instance.listRedisquotaForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReportnothingForAllNamespaces', function() {
      it('should call listReportnothingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listReportnothingForAllNamespaces
        //instance.listReportnothingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRuleForAllNamespaces', function() {
      it('should call listRuleForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRuleForAllNamespaces
        //instance.listRuleForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServicecontrolForAllNamespaces', function() {
      it('should call listServicecontrolForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listServicecontrolForAllNamespaces
        //instance.listServicecontrolForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServicecontrolreportForAllNamespaces', function() {
      it('should call listServicecontrolreportForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listServicecontrolreportForAllNamespaces
        //instance.listServicecontrolreportForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSignalfxForAllNamespaces', function() {
      it('should call listSignalfxForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listSignalfxForAllNamespaces
        //instance.listSignalfxForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSolarwindsForAllNamespaces', function() {
      it('should call listSolarwindsForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listSolarwindsForAllNamespaces
        //instance.listSolarwindsForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStackdriverForAllNamespaces', function() {
      it('should call listStackdriverForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listStackdriverForAllNamespaces
        //instance.listStackdriverForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStatsdForAllNamespaces', function() {
      it('should call listStatsdForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listStatsdForAllNamespaces
        //instance.listStatsdForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStdioForAllNamespaces', function() {
      it('should call listStdioForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listStdioForAllNamespaces
        //instance.listStdioForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTemplateForAllNamespaces', function() {
      it('should call listTemplateForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listTemplateForAllNamespaces
        //instance.listTemplateForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTracespanForAllNamespaces', function() {
      it('should call listTracespanForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listTracespanForAllNamespaces
        //instance.listTracespanForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedHTTPAPISpec', function() {
      it('should call patchNamespacedHTTPAPISpec successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedHTTPAPISpec
        //instance.patchNamespacedHTTPAPISpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedHTTPAPISpecBinding', function() {
      it('should call patchNamespacedHTTPAPISpecBinding successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedHTTPAPISpecBinding
        //instance.patchNamespacedHTTPAPISpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedQuotaSpec', function() {
      it('should call patchNamespacedQuotaSpec successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedQuotaSpec
        //instance.patchNamespacedQuotaSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedQuotaSpecBinding', function() {
      it('should call patchNamespacedQuotaSpecBinding successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedQuotaSpecBinding
        //instance.patchNamespacedQuotaSpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedadapter', function() {
      it('should call patchNamespacedadapter successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedadapter
        //instance.patchNamespacedadapter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedapikey', function() {
      it('should call patchNamespacedapikey successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedapikey
        //instance.patchNamespacedapikey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedattributemanifest', function() {
      it('should call patchNamespacedattributemanifest successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedattributemanifest
        //instance.patchNamespacedattributemanifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedauthorization', function() {
      it('should call patchNamespacedauthorization successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedauthorization
        //instance.patchNamespacedauthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedbypass', function() {
      it('should call patchNamespacedbypass successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedbypass
        //instance.patchNamespacedbypass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedchecknothing', function() {
      it('should call patchNamespacedchecknothing successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedchecknothing
        //instance.patchNamespacedchecknothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedcirconus', function() {
      it('should call patchNamespacedcirconus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedcirconus
        //instance.patchNamespacedcirconus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespaceddenier', function() {
      it('should call patchNamespaceddenier successfully', function(done) {
        //uncomment below and update the code to test patchNamespaceddenier
        //instance.patchNamespaceddenier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacededge', function() {
      it('should call patchNamespacededge successfully', function(done) {
        //uncomment below and update the code to test patchNamespacededge
        //instance.patchNamespacededge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedfluentd', function() {
      it('should call patchNamespacedfluentd successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedfluentd
        //instance.patchNamespacedfluentd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedhandler', function() {
      it('should call patchNamespacedhandler successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedhandler
        //instance.patchNamespacedhandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedinstance', function() {
      it('should call patchNamespacedinstance successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedinstance
        //instance.patchNamespacedinstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedkubernetes', function() {
      it('should call patchNamespacedkubernetes successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedkubernetes
        //instance.patchNamespacedkubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedkubernetesenv', function() {
      it('should call patchNamespacedkubernetesenv successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedkubernetesenv
        //instance.patchNamespacedkubernetesenv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedlistchecker', function() {
      it('should call patchNamespacedlistchecker successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedlistchecker
        //instance.patchNamespacedlistchecker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedlistentry', function() {
      it('should call patchNamespacedlistentry successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedlistentry
        //instance.patchNamespacedlistentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedlogentry', function() {
      it('should call patchNamespacedlogentry successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedlogentry
        //instance.patchNamespacedlogentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedmemquota', function() {
      it('should call patchNamespacedmemquota successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedmemquota
        //instance.patchNamespacedmemquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedmetric', function() {
      it('should call patchNamespacedmetric successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedmetric
        //instance.patchNamespacedmetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacednoop', function() {
      it('should call patchNamespacednoop successfully', function(done) {
        //uncomment below and update the code to test patchNamespacednoop
        //instance.patchNamespacednoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedopa', function() {
      it('should call patchNamespacedopa successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedopa
        //instance.patchNamespacedopa(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedprometheus', function() {
      it('should call patchNamespacedprometheus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedprometheus
        //instance.patchNamespacedprometheus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedquota', function() {
      it('should call patchNamespacedquota successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedquota
        //instance.patchNamespacedquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedrbac', function() {
      it('should call patchNamespacedrbac successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedrbac
        //instance.patchNamespacedrbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedredisquota', function() {
      it('should call patchNamespacedredisquota successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedredisquota
        //instance.patchNamespacedredisquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedreportnothing', function() {
      it('should call patchNamespacedreportnothing successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedreportnothing
        //instance.patchNamespacedreportnothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedrule', function() {
      it('should call patchNamespacedrule successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedrule
        //instance.patchNamespacedrule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedservicecontrol', function() {
      it('should call patchNamespacedservicecontrol successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedservicecontrol
        //instance.patchNamespacedservicecontrol(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedservicecontrolreport', function() {
      it('should call patchNamespacedservicecontrolreport successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedservicecontrolreport
        //instance.patchNamespacedservicecontrolreport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedsignalfx', function() {
      it('should call patchNamespacedsignalfx successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedsignalfx
        //instance.patchNamespacedsignalfx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedsolarwinds', function() {
      it('should call patchNamespacedsolarwinds successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedsolarwinds
        //instance.patchNamespacedsolarwinds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedstackdriver', function() {
      it('should call patchNamespacedstackdriver successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedstackdriver
        //instance.patchNamespacedstackdriver(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedstatsd', function() {
      it('should call patchNamespacedstatsd successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedstatsd
        //instance.patchNamespacedstatsd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedstdio', function() {
      it('should call patchNamespacedstdio successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedstdio
        //instance.patchNamespacedstdio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedtemplate', function() {
      it('should call patchNamespacedtemplate successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedtemplate
        //instance.patchNamespacedtemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedtracespan', function() {
      it('should call patchNamespacedtracespan successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedtracespan
        //instance.patchNamespacedtracespan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedHTTPAPISpec', function() {
      it('should call readNamespacedHTTPAPISpec successfully', function(done) {
        //uncomment below and update the code to test readNamespacedHTTPAPISpec
        //instance.readNamespacedHTTPAPISpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedHTTPAPISpecBinding', function() {
      it('should call readNamespacedHTTPAPISpecBinding successfully', function(done) {
        //uncomment below and update the code to test readNamespacedHTTPAPISpecBinding
        //instance.readNamespacedHTTPAPISpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedQuotaSpec', function() {
      it('should call readNamespacedQuotaSpec successfully', function(done) {
        //uncomment below and update the code to test readNamespacedQuotaSpec
        //instance.readNamespacedQuotaSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedQuotaSpecBinding', function() {
      it('should call readNamespacedQuotaSpecBinding successfully', function(done) {
        //uncomment below and update the code to test readNamespacedQuotaSpecBinding
        //instance.readNamespacedQuotaSpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedadapter', function() {
      it('should call readNamespacedadapter successfully', function(done) {
        //uncomment below and update the code to test readNamespacedadapter
        //instance.readNamespacedadapter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedapikey', function() {
      it('should call readNamespacedapikey successfully', function(done) {
        //uncomment below and update the code to test readNamespacedapikey
        //instance.readNamespacedapikey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedattributemanifest', function() {
      it('should call readNamespacedattributemanifest successfully', function(done) {
        //uncomment below and update the code to test readNamespacedattributemanifest
        //instance.readNamespacedattributemanifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedauthorization', function() {
      it('should call readNamespacedauthorization successfully', function(done) {
        //uncomment below and update the code to test readNamespacedauthorization
        //instance.readNamespacedauthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedbypass', function() {
      it('should call readNamespacedbypass successfully', function(done) {
        //uncomment below and update the code to test readNamespacedbypass
        //instance.readNamespacedbypass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedchecknothing', function() {
      it('should call readNamespacedchecknothing successfully', function(done) {
        //uncomment below and update the code to test readNamespacedchecknothing
        //instance.readNamespacedchecknothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedcirconus', function() {
      it('should call readNamespacedcirconus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedcirconus
        //instance.readNamespacedcirconus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespaceddenier', function() {
      it('should call readNamespaceddenier successfully', function(done) {
        //uncomment below and update the code to test readNamespaceddenier
        //instance.readNamespaceddenier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacededge', function() {
      it('should call readNamespacededge successfully', function(done) {
        //uncomment below and update the code to test readNamespacededge
        //instance.readNamespacededge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedfluentd', function() {
      it('should call readNamespacedfluentd successfully', function(done) {
        //uncomment below and update the code to test readNamespacedfluentd
        //instance.readNamespacedfluentd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedhandler', function() {
      it('should call readNamespacedhandler successfully', function(done) {
        //uncomment below and update the code to test readNamespacedhandler
        //instance.readNamespacedhandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedinstance', function() {
      it('should call readNamespacedinstance successfully', function(done) {
        //uncomment below and update the code to test readNamespacedinstance
        //instance.readNamespacedinstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedkubernetes', function() {
      it('should call readNamespacedkubernetes successfully', function(done) {
        //uncomment below and update the code to test readNamespacedkubernetes
        //instance.readNamespacedkubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedkubernetesenv', function() {
      it('should call readNamespacedkubernetesenv successfully', function(done) {
        //uncomment below and update the code to test readNamespacedkubernetesenv
        //instance.readNamespacedkubernetesenv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedlistchecker', function() {
      it('should call readNamespacedlistchecker successfully', function(done) {
        //uncomment below and update the code to test readNamespacedlistchecker
        //instance.readNamespacedlistchecker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedlistentry', function() {
      it('should call readNamespacedlistentry successfully', function(done) {
        //uncomment below and update the code to test readNamespacedlistentry
        //instance.readNamespacedlistentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedlogentry', function() {
      it('should call readNamespacedlogentry successfully', function(done) {
        //uncomment below and update the code to test readNamespacedlogentry
        //instance.readNamespacedlogentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedmemquota', function() {
      it('should call readNamespacedmemquota successfully', function(done) {
        //uncomment below and update the code to test readNamespacedmemquota
        //instance.readNamespacedmemquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedmetric', function() {
      it('should call readNamespacedmetric successfully', function(done) {
        //uncomment below and update the code to test readNamespacedmetric
        //instance.readNamespacedmetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacednoop', function() {
      it('should call readNamespacednoop successfully', function(done) {
        //uncomment below and update the code to test readNamespacednoop
        //instance.readNamespacednoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedopa', function() {
      it('should call readNamespacedopa successfully', function(done) {
        //uncomment below and update the code to test readNamespacedopa
        //instance.readNamespacedopa(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedprometheus', function() {
      it('should call readNamespacedprometheus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedprometheus
        //instance.readNamespacedprometheus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedquota', function() {
      it('should call readNamespacedquota successfully', function(done) {
        //uncomment below and update the code to test readNamespacedquota
        //instance.readNamespacedquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedrbac', function() {
      it('should call readNamespacedrbac successfully', function(done) {
        //uncomment below and update the code to test readNamespacedrbac
        //instance.readNamespacedrbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedredisquota', function() {
      it('should call readNamespacedredisquota successfully', function(done) {
        //uncomment below and update the code to test readNamespacedredisquota
        //instance.readNamespacedredisquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedreportnothing', function() {
      it('should call readNamespacedreportnothing successfully', function(done) {
        //uncomment below and update the code to test readNamespacedreportnothing
        //instance.readNamespacedreportnothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedrule', function() {
      it('should call readNamespacedrule successfully', function(done) {
        //uncomment below and update the code to test readNamespacedrule
        //instance.readNamespacedrule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedservicecontrol', function() {
      it('should call readNamespacedservicecontrol successfully', function(done) {
        //uncomment below and update the code to test readNamespacedservicecontrol
        //instance.readNamespacedservicecontrol(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedservicecontrolreport', function() {
      it('should call readNamespacedservicecontrolreport successfully', function(done) {
        //uncomment below and update the code to test readNamespacedservicecontrolreport
        //instance.readNamespacedservicecontrolreport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedsignalfx', function() {
      it('should call readNamespacedsignalfx successfully', function(done) {
        //uncomment below and update the code to test readNamespacedsignalfx
        //instance.readNamespacedsignalfx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedsolarwinds', function() {
      it('should call readNamespacedsolarwinds successfully', function(done) {
        //uncomment below and update the code to test readNamespacedsolarwinds
        //instance.readNamespacedsolarwinds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedstackdriver', function() {
      it('should call readNamespacedstackdriver successfully', function(done) {
        //uncomment below and update the code to test readNamespacedstackdriver
        //instance.readNamespacedstackdriver(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedstatsd', function() {
      it('should call readNamespacedstatsd successfully', function(done) {
        //uncomment below and update the code to test readNamespacedstatsd
        //instance.readNamespacedstatsd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedstdio', function() {
      it('should call readNamespacedstdio successfully', function(done) {
        //uncomment below and update the code to test readNamespacedstdio
        //instance.readNamespacedstdio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedtemplate', function() {
      it('should call readNamespacedtemplate successfully', function(done) {
        //uncomment below and update the code to test readNamespacedtemplate
        //instance.readNamespacedtemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedtracespan', function() {
      it('should call readNamespacedtracespan successfully', function(done) {
        //uncomment below and update the code to test readNamespacedtracespan
        //instance.readNamespacedtracespan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedHTTPAPISpec', function() {
      it('should call replaceNamespacedHTTPAPISpec successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedHTTPAPISpec
        //instance.replaceNamespacedHTTPAPISpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedHTTPAPISpecBinding', function() {
      it('should call replaceNamespacedHTTPAPISpecBinding successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedHTTPAPISpecBinding
        //instance.replaceNamespacedHTTPAPISpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedQuotaSpec', function() {
      it('should call replaceNamespacedQuotaSpec successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedQuotaSpec
        //instance.replaceNamespacedQuotaSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedQuotaSpecBinding', function() {
      it('should call replaceNamespacedQuotaSpecBinding successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedQuotaSpecBinding
        //instance.replaceNamespacedQuotaSpecBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedadapter', function() {
      it('should call replaceNamespacedadapter successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedadapter
        //instance.replaceNamespacedadapter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedapikey', function() {
      it('should call replaceNamespacedapikey successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedapikey
        //instance.replaceNamespacedapikey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedattributemanifest', function() {
      it('should call replaceNamespacedattributemanifest successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedattributemanifest
        //instance.replaceNamespacedattributemanifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedauthorization', function() {
      it('should call replaceNamespacedauthorization successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedauthorization
        //instance.replaceNamespacedauthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedbypass', function() {
      it('should call replaceNamespacedbypass successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedbypass
        //instance.replaceNamespacedbypass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedchecknothing', function() {
      it('should call replaceNamespacedchecknothing successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedchecknothing
        //instance.replaceNamespacedchecknothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedcirconus', function() {
      it('should call replaceNamespacedcirconus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedcirconus
        //instance.replaceNamespacedcirconus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespaceddenier', function() {
      it('should call replaceNamespaceddenier successfully', function(done) {
        //uncomment below and update the code to test replaceNamespaceddenier
        //instance.replaceNamespaceddenier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacededge', function() {
      it('should call replaceNamespacededge successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacededge
        //instance.replaceNamespacededge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedfluentd', function() {
      it('should call replaceNamespacedfluentd successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedfluentd
        //instance.replaceNamespacedfluentd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedhandler', function() {
      it('should call replaceNamespacedhandler successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedhandler
        //instance.replaceNamespacedhandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedinstance', function() {
      it('should call replaceNamespacedinstance successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedinstance
        //instance.replaceNamespacedinstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedkubernetes', function() {
      it('should call replaceNamespacedkubernetes successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedkubernetes
        //instance.replaceNamespacedkubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedkubernetesenv', function() {
      it('should call replaceNamespacedkubernetesenv successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedkubernetesenv
        //instance.replaceNamespacedkubernetesenv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedlistchecker', function() {
      it('should call replaceNamespacedlistchecker successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedlistchecker
        //instance.replaceNamespacedlistchecker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedlistentry', function() {
      it('should call replaceNamespacedlistentry successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedlistentry
        //instance.replaceNamespacedlistentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedlogentry', function() {
      it('should call replaceNamespacedlogentry successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedlogentry
        //instance.replaceNamespacedlogentry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedmemquota', function() {
      it('should call replaceNamespacedmemquota successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedmemquota
        //instance.replaceNamespacedmemquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedmetric', function() {
      it('should call replaceNamespacedmetric successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedmetric
        //instance.replaceNamespacedmetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacednoop', function() {
      it('should call replaceNamespacednoop successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacednoop
        //instance.replaceNamespacednoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedopa', function() {
      it('should call replaceNamespacedopa successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedopa
        //instance.replaceNamespacedopa(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedprometheus', function() {
      it('should call replaceNamespacedprometheus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedprometheus
        //instance.replaceNamespacedprometheus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedquota', function() {
      it('should call replaceNamespacedquota successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedquota
        //instance.replaceNamespacedquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedrbac', function() {
      it('should call replaceNamespacedrbac successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedrbac
        //instance.replaceNamespacedrbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedredisquota', function() {
      it('should call replaceNamespacedredisquota successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedredisquota
        //instance.replaceNamespacedredisquota(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedreportnothing', function() {
      it('should call replaceNamespacedreportnothing successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedreportnothing
        //instance.replaceNamespacedreportnothing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedrule', function() {
      it('should call replaceNamespacedrule successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedrule
        //instance.replaceNamespacedrule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedservicecontrol', function() {
      it('should call replaceNamespacedservicecontrol successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedservicecontrol
        //instance.replaceNamespacedservicecontrol(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedservicecontrolreport', function() {
      it('should call replaceNamespacedservicecontrolreport successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedservicecontrolreport
        //instance.replaceNamespacedservicecontrolreport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedsignalfx', function() {
      it('should call replaceNamespacedsignalfx successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedsignalfx
        //instance.replaceNamespacedsignalfx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedsolarwinds', function() {
      it('should call replaceNamespacedsolarwinds successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedsolarwinds
        //instance.replaceNamespacedsolarwinds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedstackdriver', function() {
      it('should call replaceNamespacedstackdriver successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedstackdriver
        //instance.replaceNamespacedstackdriver(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedstatsd', function() {
      it('should call replaceNamespacedstatsd successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedstatsd
        //instance.replaceNamespacedstatsd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedstdio', function() {
      it('should call replaceNamespacedstdio successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedstdio
        //instance.replaceNamespacedstdio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedtemplate', function() {
      it('should call replaceNamespacedtemplate successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedtemplate
        //instance.replaceNamespacedtemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedtracespan', function() {
      it('should call replaceNamespacedtracespan successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedtracespan
        //instance.replaceNamespacedtracespan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
