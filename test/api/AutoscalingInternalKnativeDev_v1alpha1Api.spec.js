/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.AutoscalingInternalKnativeDev_v1alpha1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AutoscalingInternalKnativeDev_v1alpha1Api', function() {
    describe('createNamespacedPodAutoscaler', function() {
      it('should call createNamespacedPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test createNamespacedPodAutoscaler
        //instance.createNamespacedPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedPodAutoscaler', function() {
      it('should call deleteCollectionNamespacedPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedPodAutoscaler
        //instance.deleteCollectionNamespacedPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedPodAutoscaler', function() {
      it('should call deleteNamespacedPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedPodAutoscaler
        //instance.deleteNamespacedPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedPodAutoscaler', function() {
      it('should call listNamespacedPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test listNamespacedPodAutoscaler
        //instance.listNamespacedPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPodAutoscalerForAllNamespaces', function() {
      it('should call listPodAutoscalerForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listPodAutoscalerForAllNamespaces
        //instance.listPodAutoscalerForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedPodAutoscaler', function() {
      it('should call patchNamespacedPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedPodAutoscaler
        //instance.patchNamespacedPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedPodAutoscalerStatus', function() {
      it('should call patchNamespacedPodAutoscalerStatus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedPodAutoscalerStatus
        //instance.patchNamespacedPodAutoscalerStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedPodAutoscaler', function() {
      it('should call readNamespacedPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test readNamespacedPodAutoscaler
        //instance.readNamespacedPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedPodAutoscalerStatus', function() {
      it('should call readNamespacedPodAutoscalerStatus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedPodAutoscalerStatus
        //instance.readNamespacedPodAutoscalerStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedPodAutoscaler', function() {
      it('should call replaceNamespacedPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedPodAutoscaler
        //instance.replaceNamespacedPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedPodAutoscalerStatus', function() {
      it('should call replaceNamespacedPodAutoscalerStatus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedPodAutoscalerStatus
        //instance.replaceNamespacedPodAutoscalerStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
