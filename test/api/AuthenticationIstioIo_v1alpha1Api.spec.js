/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.AuthenticationIstioIo_v1alpha1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthenticationIstioIo_v1alpha1Api', function() {
    describe('createMeshPolicy', function() {
      it('should call createMeshPolicy successfully', function(done) {
        //uncomment below and update the code to test createMeshPolicy
        //instance.createMeshPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedPolicy', function() {
      it('should call createNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test createNamespacedPolicy
        //instance.createNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionMeshPolicy', function() {
      it('should call deleteCollectionMeshPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionMeshPolicy
        //instance.deleteCollectionMeshPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedPolicy', function() {
      it('should call deleteCollectionNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedPolicy
        //instance.deleteCollectionNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMeshPolicy', function() {
      it('should call deleteMeshPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteMeshPolicy
        //instance.deleteMeshPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedPolicy', function() {
      it('should call deleteNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedPolicy
        //instance.deleteNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMeshPolicy', function() {
      it('should call listMeshPolicy successfully', function(done) {
        //uncomment below and update the code to test listMeshPolicy
        //instance.listMeshPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedPolicy', function() {
      it('should call listNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test listNamespacedPolicy
        //instance.listNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPolicyForAllNamespaces', function() {
      it('should call listPolicyForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listPolicyForAllNamespaces
        //instance.listPolicyForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchMeshPolicy', function() {
      it('should call patchMeshPolicy successfully', function(done) {
        //uncomment below and update the code to test patchMeshPolicy
        //instance.patchMeshPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedPolicy', function() {
      it('should call patchNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedPolicy
        //instance.patchNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readMeshPolicy', function() {
      it('should call readMeshPolicy successfully', function(done) {
        //uncomment below and update the code to test readMeshPolicy
        //instance.readMeshPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedPolicy', function() {
      it('should call readNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test readNamespacedPolicy
        //instance.readNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceMeshPolicy', function() {
      it('should call replaceMeshPolicy successfully', function(done) {
        //uncomment below and update the code to test replaceMeshPolicy
        //instance.replaceMeshPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedPolicy', function() {
      it('should call replaceNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedPolicy
        //instance.replaceNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
