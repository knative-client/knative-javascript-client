/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1beta1CustomResourceDefinitionCondition from './V1beta1CustomResourceDefinitionCondition';
import V1beta1CustomResourceDefinitionNames from './V1beta1CustomResourceDefinitionNames';





/**
* The V1beta1CustomResourceDefinitionStatus model module.
* @module client/client.models/V1beta1CustomResourceDefinitionStatus
* @version 0.1
*/
export default class V1beta1CustomResourceDefinitionStatus {
    /**
    * Constructs a new <code>V1beta1CustomResourceDefinitionStatus</code>.
    * CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
    * @alias module:client/client.models/V1beta1CustomResourceDefinitionStatus
    * @class
    * @param acceptedNames {module:client/client.models/V1beta1CustomResourceDefinitionNames} AcceptedNames are the names that are actually being used to serve discovery They may be different than the names in spec.
    * @param conditions {Array.<module:client/client.models/V1beta1CustomResourceDefinitionCondition>} Conditions indicate state for particular aspects of a CustomResourceDefinition
    * @param storedVersions {Array.<String>} StoredVersions are all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so the migration controller can first finish a migration to another version (i.e. that no old objects are left in the storage), and then remove the rest of the versions from this list. None of the versions in this list can be removed from the spec.Versions field.
    */

    constructor(acceptedNames, conditions, storedVersions) {
        

        
        

        this['acceptedNames'] = acceptedNames;this['conditions'] = conditions;this['storedVersions'] = storedVersions;

        
    }

    /**
    * Constructs a <code>V1beta1CustomResourceDefinitionStatus</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/client.models/V1beta1CustomResourceDefinitionStatus} obj Optional instance to populate.
    * @return {module:client/client.models/V1beta1CustomResourceDefinitionStatus} The populated <code>V1beta1CustomResourceDefinitionStatus</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1beta1CustomResourceDefinitionStatus();

            
            
            

            if (data.hasOwnProperty('acceptedNames')) {
                obj['acceptedNames'] = V1beta1CustomResourceDefinitionNames.constructFromObject(data['acceptedNames']);
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [V1beta1CustomResourceDefinitionCondition]);
            }
            if (data.hasOwnProperty('storedVersions')) {
                obj['storedVersions'] = ApiClient.convertToType(data['storedVersions'], ['String']);
            }
        }
        return obj;
    }

    /**
    * AcceptedNames are the names that are actually being used to serve discovery They may be different than the names in spec.
    * @member {module:client/client.models/V1beta1CustomResourceDefinitionNames} acceptedNames
    */
    acceptedNames = undefined;
    /**
    * Conditions indicate state for particular aspects of a CustomResourceDefinition
    * @member {Array.<module:client/client.models/V1beta1CustomResourceDefinitionCondition>} conditions
    */
    conditions = undefined;
    /**
    * StoredVersions are all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so the migration controller can first finish a migration to another version (i.e. that no old objects are left in the storage), and then remove the rest of the versions from this list. None of the versions in this list can be removed from the spec.Versions field.
    * @member {Array.<String>} storedVersions
    */
    storedVersions = undefined;








}


