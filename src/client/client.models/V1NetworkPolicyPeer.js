/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1IPBlock from './V1IPBlock';
import V1LabelSelector from './V1LabelSelector';





/**
* The V1NetworkPolicyPeer model module.
* @module client/client.models/V1NetworkPolicyPeer
* @version 0.1
*/
export default class V1NetworkPolicyPeer {
    /**
    * Constructs a new <code>V1NetworkPolicyPeer</code>.
    * NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed
    * @alias module:client/client.models/V1NetworkPolicyPeer
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>V1NetworkPolicyPeer</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/client.models/V1NetworkPolicyPeer} obj Optional instance to populate.
    * @return {module:client/client.models/V1NetworkPolicyPeer} The populated <code>V1NetworkPolicyPeer</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1NetworkPolicyPeer();

            
            
            

            if (data.hasOwnProperty('ipBlock')) {
                obj['ipBlock'] = V1IPBlock.constructFromObject(data['ipBlock']);
            }
            if (data.hasOwnProperty('namespaceSelector')) {
                obj['namespaceSelector'] = V1LabelSelector.constructFromObject(data['namespaceSelector']);
            }
            if (data.hasOwnProperty('podSelector')) {
                obj['podSelector'] = V1LabelSelector.constructFromObject(data['podSelector']);
            }
        }
        return obj;
    }

    /**
    * IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
    * @member {module:client/client.models/V1IPBlock} ipBlock
    */
    ipBlock = undefined;
    /**
    * Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.  If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.
    * @member {module:client/client.models/V1LabelSelector} namespaceSelector
    */
    namespaceSelector = undefined;
    /**
    * This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.  If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.
    * @member {module:client/client.models/V1LabelSelector} podSelector
    */
    podSelector = undefined;








}


