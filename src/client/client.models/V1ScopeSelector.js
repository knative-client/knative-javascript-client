/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1ScopedResourceSelectorRequirement from './V1ScopedResourceSelectorRequirement';





/**
* The V1ScopeSelector model module.
* @module client/client.models/V1ScopeSelector
* @version 0.1
*/
export default class V1ScopeSelector {
    /**
    * Constructs a new <code>V1ScopeSelector</code>.
    * A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
    * @alias module:client/client.models/V1ScopeSelector
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>V1ScopeSelector</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/client.models/V1ScopeSelector} obj Optional instance to populate.
    * @return {module:client/client.models/V1ScopeSelector} The populated <code>V1ScopeSelector</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1ScopeSelector();

            
            
            

            if (data.hasOwnProperty('matchExpressions')) {
                obj['matchExpressions'] = ApiClient.convertToType(data['matchExpressions'], [V1ScopedResourceSelectorRequirement]);
            }
        }
        return obj;
    }

    /**
    * A list of scope selector requirements by scope of the resources.
    * @member {Array.<module:client/client.models/V1ScopedResourceSelectorRequirement>} matchExpressions
    */
    matchExpressions = undefined;








}


