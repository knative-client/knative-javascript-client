/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The V1ConfigMapNodeConfigSource model module.
* @module client/client.models/V1ConfigMapNodeConfigSource
* @version 0.1
*/
export default class V1ConfigMapNodeConfigSource {
    /**
    * Constructs a new <code>V1ConfigMapNodeConfigSource</code>.
    * ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.
    * @alias module:client/client.models/V1ConfigMapNodeConfigSource
    * @class
    * @param kubeletConfigKey {String} KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
    * @param name {String} Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
    * @param namespace {String} Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
    */

    constructor(kubeletConfigKey, name, namespace) {
        

        
        

        this['kubeletConfigKey'] = kubeletConfigKey;this['name'] = name;this['namespace'] = namespace;

        
    }

    /**
    * Constructs a <code>V1ConfigMapNodeConfigSource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/client.models/V1ConfigMapNodeConfigSource} obj Optional instance to populate.
    * @return {module:client/client.models/V1ConfigMapNodeConfigSource} The populated <code>V1ConfigMapNodeConfigSource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1ConfigMapNodeConfigSource();

            
            
            

            if (data.hasOwnProperty('kubeletConfigKey')) {
                obj['kubeletConfigKey'] = ApiClient.convertToType(data['kubeletConfigKey'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('resourceVersion')) {
                obj['resourceVersion'] = ApiClient.convertToType(data['resourceVersion'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
    * KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
    * @member {String} kubeletConfigKey
    */
    kubeletConfigKey = undefined;
    /**
    * Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
    * @member {String} name
    */
    name = undefined;
    /**
    * Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
    * @member {String} namespace
    */
    namespace = undefined;
    /**
    * ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
    * @member {String} resourceVersion
    */
    resourceVersion = undefined;
    /**
    * UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
    * @member {String} uid
    */
    uid = undefined;








}


