/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import NetworkingV1beta1IngressBackend from './NetworkingV1beta1IngressBackend';
import NetworkingV1beta1IngressRule from './NetworkingV1beta1IngressRule';
import NetworkingV1beta1IngressTLS from './NetworkingV1beta1IngressTLS';





/**
* The NetworkingV1beta1IngressSpec model module.
* @module client/client.models/NetworkingV1beta1IngressSpec
* @version 0.1
*/
export default class NetworkingV1beta1IngressSpec {
    /**
    * Constructs a new <code>NetworkingV1beta1IngressSpec</code>.
    * IngressSpec describes the Ingress the user wishes to exist.
    * @alias module:client/client.models/NetworkingV1beta1IngressSpec
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>NetworkingV1beta1IngressSpec</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/client.models/NetworkingV1beta1IngressSpec} obj Optional instance to populate.
    * @return {module:client/client.models/NetworkingV1beta1IngressSpec} The populated <code>NetworkingV1beta1IngressSpec</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkingV1beta1IngressSpec();

            
            
            

            if (data.hasOwnProperty('backend')) {
                obj['backend'] = NetworkingV1beta1IngressBackend.constructFromObject(data['backend']);
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [NetworkingV1beta1IngressRule]);
            }
            if (data.hasOwnProperty('tls')) {
                obj['tls'] = ApiClient.convertToType(data['tls'], [NetworkingV1beta1IngressTLS]);
            }
        }
        return obj;
    }

    /**
    * A default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.
    * @member {module:client/client.models/NetworkingV1beta1IngressBackend} backend
    */
    backend = undefined;
    /**
    * A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
    * @member {Array.<module:client/client.models/NetworkingV1beta1IngressRule>} rules
    */
    rules = undefined;
    /**
    * TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
    * @member {Array.<module:client/client.models/NetworkingV1beta1IngressTLS>} tls
    */
    tls = undefined;








}


