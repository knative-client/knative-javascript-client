/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1LocalObjectReference from './V1LocalObjectReference';





/**
* The V1CSIVolumeSource model module.
* @module client/client.models/V1CSIVolumeSource
* @version 0.1
*/
export default class V1CSIVolumeSource {
    /**
    * Constructs a new <code>V1CSIVolumeSource</code>.
    * Represents a source location of a volume to mount, managed by an external CSI driver
    * @alias module:client/client.models/V1CSIVolumeSource
    * @class
    * @param driver {String} Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    */

    constructor(driver) {
        

        
        

        this['driver'] = driver;

        
    }

    /**
    * Constructs a <code>V1CSIVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/client.models/V1CSIVolumeSource} obj Optional instance to populate.
    * @return {module:client/client.models/V1CSIVolumeSource} The populated <code>V1CSIVolumeSource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1CSIVolumeSource();

            
            
            

            if (data.hasOwnProperty('driver')) {
                obj['driver'] = ApiClient.convertToType(data['driver'], 'String');
            }
            if (data.hasOwnProperty('fsType')) {
                obj['fsType'] = ApiClient.convertToType(data['fsType'], 'String');
            }
            if (data.hasOwnProperty('nodePublishSecretRef')) {
                obj['nodePublishSecretRef'] = V1LocalObjectReference.constructFromObject(data['nodePublishSecretRef']);
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('volumeAttributes')) {
                obj['volumeAttributes'] = ApiClient.convertToType(data['volumeAttributes'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
    * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    * @member {String} driver
    */
    driver = undefined;
    /**
    * Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
    * @member {String} fsType
    */
    fsType = undefined;
    /**
    * NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
    * @member {module:client/client.models/V1LocalObjectReference} nodePublishSecretRef
    */
    nodePublishSecretRef = undefined;
    /**
    * Specifies a read-only configuration for the volume. Defaults to false (read/write).
    * @member {Boolean} readOnly
    */
    readOnly = undefined;
    /**
    * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
    * @member {Object.<String, String>} volumeAttributes
    */
    volumeAttributes = undefined;








}


